name: Release X-ui
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true # Release草稿
          prerelease: true # 预览版
  Windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Check out git repository
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache file
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            %APPDATA%\npm-cache
            %LOCALAPPDATA%\electron\Cache
            %LOCALAPPDATA%\electron-builder\Cache
          key: ${{ runner.os }}-build-caches-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Install Dependencies
        run: |
          npm install npm@8.5 -g
          npm install
      - name: Build src code
        run: npm run build:src

      - name: Release package
        run: |
          npm run publish:win:setup:x64:always
          npm run publish:win:setup:x86
          npm run publish:win:setup:arm64
          npm run publish:win:setup:x86_64
          npm run publish:win:7z:x64
          npm run publish:win:7z:x86
          npm run publish:win:7z:arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate file MD5
        run: |
          cd build
          Get-FileHash *.exe,*.7z -Algorithm MD5 | Format-List
      - name: Uploading
        uses: actions/upload-artifact@v1
        with:
          name: release_win # 生成的压缩包名称
          path: release # 需要打包的路径
